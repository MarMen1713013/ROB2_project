FAR OBSTACLE:

when the cps are always present the joint velocities are much more discontinous. On the other hand when the control point are allowed only under a certain threshold then the joint velocities are way smoother. Moreover in the latter case the joint velocities values are also smaller: joint 6 in the first case is between 2 and -1, while in the second case it is between (0.5,-0.5). joint 5 in the second case is almost still while in the first case it reaches -2 as minimum value during execution.
So we can see that the joint velocities profiles are almost the same but they are damped in the second case and when the obstacle is far from the obstacle in the stack we never have the cps task in the sot.
The ee task error magnitude is almost the same in both cases and from the rofile I can see that in the second case the result is again smoother and the final error is slightly smaller.
The elbow task error, instead, goes from 0 to 35 and this is because the elbow task has less priority than ee task and the 2 tasks are not independent and theelbow task is beeing accomodated by computing the prjected solution in ee task null space that minimizes the error for the elbow task.

OBSTACLE CLOSE PATH

This is quite a critic situation, even if the obstacle is not directly on the ee path, because I choose this position in order to have the presence of the other cps in the task. Moreover at the start of the simulation the 2 cp is quite close to the obstacle and so it can bee seen that the elbow task looses priority in the sot.
when the control points are alway present, there are no swaps during the execution and the order oof the sot from the start is [0,2,3,1]. From the cps distances I can see that the 2 cps on the robot body are never under the critical distance and so the ee task is always the most important one. On the other hand the elbow task is put at the last place since the collision avoidance is more important to satisfy and the second cp is closer to the obstacle during the whole execution. The joint velocities plots are higly discontinous, especially in the case of the joint 5 and 6 where we can observe that the mean value of the plots are almost 0 but there is a very high variance during the execution.
On the other hand, when the cps are not always present, I can observe that the 3 cp task is never present in the sot, since its distance from the obstacle is greater than the threshold one, but still the elbow task has the smaller priority because we need to guarantee obstacle avoidance. In this case the joint velocities are still very discontinous but at least for the joint 5 and 6 now there is a more regular profile. Moreover we can observe some strange and evident discontinuity happening at the joint 1,2,3,6 some time after the 120-th and after 140-th iteration, which, from the cps distances I can see they corrispond to a jerk movement at the cps point of the robot.
In this case, though, the ee task is well preserved while avoiding the obstacle during the whole execution and the ee task error magnitude is even smaller than when the obstacle was more far away.

OBSTACLE ON PATH

In this third experimentthe obstacle is on the path that the ee needs to track so the ee task error magnitude shows a bell shape profile because the robots need to deviate from the path in order to avoid the obstacle but then the error is almost completetly recovered and in the end the robot follows the correct path up tp the final destination.
When all the cps are always present, the joint velocities are quite discontinous. Moreover, a quite important spike in the velocity profiles of the 1-th,3-th and 6-th joint is registered almost before of the 60-th iteration. This can easily be reconducted to the task swap that happened at the 56-th iteration from [0,3,1,2] to [0,3,2,1]. I can see that in that iteration the 2 cps is quite close to the obstacle and so the elbow task looses priority. A back swap happens some iteration later (at the 80-th), but in this case it does not produce an evident spike in the velocity profiles.
When the cps are not always present, instead, I can see that the discontinuites almost disappears. In this case, in fact, the cps are never present in sot so only the ee task and elbow task are carried out and therefore no swapping happens. In this way the velocity profiles are way smoother and in addition the previou spikes due to the swapping are never present.
In this case, I can see that the elbow task is quite weel carried out with respect to the ee task and the result is similar to the case of the obstacle far from the obstacle. This means that even if the elbow task is almost always at the bottom of sot during the execution is quite independent from the cps tasks, since the obstacle avoidance in this case is more important at the ee level that at the other points on the robot structure.